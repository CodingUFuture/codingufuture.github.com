<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-08-08T16:14:13+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">分享你的知识</title><subtitle>知识分享，优秀项目分享.</subtitle><entry><title type="html">VUE 集成BPMN-JS（hello world）</title><link href="http://localhost:4000/%E5%89%8D%E7%AB%AF/2020/08/08/VUE%E4%BD%BF%E7%94%A8bpmn.html" rel="alternate" type="text/html" title="VUE 集成BPMN-JS（hello world）" /><published>2020-08-08T13:48:09+08:00</published><updated>2020-08-08T13:48:09+08:00</updated><id>http://localhost:4000/%E5%89%8D%E7%AB%AF/2020/08/08/VUE%E4%BD%BF%E7%94%A8bpmn</id><content type="html" xml:base="http://localhost:4000/%E5%89%8D%E7%AB%AF/2020/08/08/VUE%E4%BD%BF%E7%94%A8bpmn.html">&lt;p&gt;背景：&lt;/p&gt;

&lt;p&gt;因为个人之前没有VUE甚至是前端框架的开发经验，需要从0开始创建应用并简单集成bpmn-js&lt;/p&gt;

&lt;p&gt;需要了解bpmn-js的用途的，可以自行百度或者在其官网上进行查看 bpmn.io&lt;/p&gt;

&lt;p&gt;一、构建基础应用，并引入nodeModule依赖&lt;/p&gt;

&lt;p&gt;首先是构建VUE应用，这一点如果有VUE基础的小伙伴们，可以直接跳过忽略。（使用vue、npm 命令需要先安装nodejs环境以及vue脚手架，安装可以自行百度）&lt;/p&gt;

&lt;p&gt;1、使用vue webpack 构建一个新的项目
vue init webpack bpmn-js-demo&lt;/p&gt;

&lt;p&gt;2、使用npm命令进行添加依赖 进入bpmn-js-demo目录下&lt;/p&gt;

&lt;p&gt;npm install bpmn-js
npm install bpmn-js-properties-panle
npm install camunda-bpmn-moddle&lt;/p&gt;

&lt;p&gt;二、创建示例文件，修改路由进行跳转
1、在src目录下新建 BpmnDemo.vue文件，添加以下内容&lt;/p&gt;

&lt;p&gt;https://paste.ubuntu.com/p/QFPBy6Q6DS/&lt;/p&gt;

&lt;p&gt;2、修改路由进行跳转，打开src/router/index.js文件修改&lt;/p&gt;

&lt;p&gt;https://paste.ubuntu.com/p/Z9HGV66rpp/&lt;/p&gt;

&lt;p&gt;三、编译运行&lt;/p&gt;

&lt;p&gt;npm run dev&lt;/p&gt;

&lt;p&gt;打开 localhost:8080/ 进行查看效果&lt;/p&gt;</content><author><name></name></author><category term="前端" /><summary type="html">背景：</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2020/08/08/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-08-08T13:48:09+08:00</published><updated>2020-08-08T13:48:09+08:00</updated><id>http://localhost:4000/jekyll/update/2020/08/08/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/08/08/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>